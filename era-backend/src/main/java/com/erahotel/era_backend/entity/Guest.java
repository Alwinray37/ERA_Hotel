package com.erahotel.era_backend.entity;

import jakarta.persistence.*;
import lombok.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Guest Entity class that represents a Guest obj in the Era Hotel database
 * This stores personal details such as name, email and phone
 * Also stores a List of strings which are reservationId's stored in guestReservations
 * the logic for appending a reservationId into the list is defined in the frontend within BookingForm.jsx
 *
 * <p>The {@code Guest} entity is mapped to the "guests" table in the database.
 * it uses JPA annotations for persistence and includes an element for tracking multiple reservation ID's as strings.</p>
 *
 * @author Alwin Roble
 */

@Data
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "guests")
public class Guest{

    /** primary key for the guest entity, uses auto-increment strategy, auto-generated by the database */
    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long guestId;

    /** Full name, or just any name, of the guest*/
    private String name;
    /** Email address of the guest, not the actual primary key, but this will be connected to {@link Reservation} entity data. Will also be used to fetch the instance and make validations */
    private String email;
    /** Phone number for guest*/
    private String phone;

    /**
     * List of reservation IDs associated with the guest.
     * Each entry corresponds to a reservation's unique identifier.
     */
    @ElementCollection
    private List<String> guestReservations = new ArrayList<>(); // tracks all reservations for this guest.

    public void setId(long l) {
    }
}
